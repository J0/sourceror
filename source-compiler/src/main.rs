use projstd::log;

/*const SOURCE_CODE: &'static str = r#"
{"type":"Program","start":0,"end":72,"body":[{"type":"FunctionDeclaration","start":0,"end":72,"id":{"type":"Identifier","start":9,"end":10,"name":"f"},"expression":false,"generator":false,"async":false,"params":[{"type":"Identifier","start":11,"end":12,"name":"a"},{"type":"Identifier","start":14,"end":15,"name":"b"}],"body":{"type":"BlockStatement","start":17,"end":72,"body":[{"type":"VariableDeclaration","start":18,"end":30,"declarations":[{"type":"VariableDeclarator","start":24,"end":29,"id":{"type":"Identifier","start":24,"end":25,"name":"x"},"init":{"type":"Literal","start":28,"end":29,"value":4,"raw":"4"}}],"kind":"const"},{"type":"VariableDeclaration","start":30,"end":46,"declarations":[{"type":"VariableDeclarator","start":36,"end":45,"id":{"type":"Identifier","start":36,"end":37,"name":"y"},"init":{"type":"BinaryExpression","start":40,"end":45,"left":{"type":"Identifier","start":40,"end":41,"name":"x"},"operator":"*","right":{"type":"Identifier","start":44,"end":45,"name":"x"}}}],"kind":"const"},{"type":"VariableDeclaration","start":46,"end":62,"declarations":[{"type":"VariableDeclarator","start":52,"end":61,"id":{"type":"Identifier","start":52,"end":53,"name":"z"},"init":{"type":"BinaryExpression","start":56,"end":61,"left":{"type":"Identifier","start":56,"end":57,"name":"y"},"operator":"+","right":{"type":"Literal","start":60,"end":61,"value":5,"raw":"5"}}}],"kind":"const"},{"type":"ReturnStatement","start":62,"end":71,"argument":{"type":"Identifier","start":69,"end":70,"name":"z"}}]}}],"sourceType":"script"}
"#;*/
const SOURCE_CODE: &'static str = r#"
{"type":"Program","start":0,"end":269,"loc":{"start":{"line":1,"column":0},"end":{"line":13,"column":6}},"body":[{"type":"ImportDeclaration","start":0,"end":76,"loc":{"start":{"line":1,"column":0},"end":{"line":1,"column":76}},"specifiers":[{"type":"ImportSpecifier","start":8,"end":14,"loc":{"start":{"line":1,"column":8},"end":{"line":1,"column":14}},"imported":{"type":"Identifier","start":8,"end":14,"loc":{"start":{"line":1,"column":8},"end":{"line":1,"column":14}},"name":"square"},"local":{"type":"Identifier","start":8,"end":14,"loc":{"start":{"line":1,"column":8},"end":{"line":1,"column":14}},"name":"square"}},{"type":"ImportSpecifier","start":15,"end":19,"loc":{"start":{"line":1,"column":15},"end":{"line":1,"column":19}},"imported":{"type":"Identifier","start":15,"end":19,"loc":{"start":{"line":1,"column":15},"end":{"line":1,"column":19}},"name":"cube"},"local":{"type":"Identifier","start":15,"end":19,"loc":{"start":{"line":1,"column":15},"end":{"line":1,"column":19}},"name":"cube"}}],"source":{"type":"Literal","start":26,"end":75,"loc":{"start":{"line":1,"column":26},"end":{"line":1,"column":75}},"value":"http://localhost:8000/externalLibs/file1.source","raw":"\"http://localhost:8000/externalLibs/file1.source\""}},{"type":"ExpressionStatement","start":94,"end":118,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":24}},"expression":{"type":"AssignmentExpression","start":94,"end":117,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":23}},"operator":"=","left":{"type":"Identifier","start":94,"end":106,"loc":{"start":{"line":4,"column":0},"end":{"line":4,"column":12}},"name":"__attributes"},"right":{"type":"Literal","start":109,"end":117,"loc":{"start":{"line":4,"column":15},"end":{"line":4,"column":23}},"value":"direct","raw":"\"direct\""}}},{"type":"FunctionDeclaration","start":119,"end":213,"loc":{"start":{"line":5,"column":0},"end":{"line":8,"column":1}},"id":{"type":"Identifier","start":128,"end":129,"loc":{"start":{"line":5,"column":9},"end":{"line":5,"column":10}},"name":"f"},"expression":false,"generator":false,"params":[{"type":"Identifier","start":130,"end":131,"loc":{"start":{"line":5,"column":11},"end":{"line":5,"column":12}},"name":"x"},{"type":"Identifier","start":133,"end":135,"loc":{"start":{"line":5,"column":14},"end":{"line":5,"column":16}},"name":"op"}],"body":{"type":"BlockStatement","start":137,"end":213,"loc":{"start":{"line":5,"column":18},"end":{"line":8,"column":1}},"body":[{"type":"ReturnStatement","start":143,"end":195,"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":56}},"argument":{"type":"ConditionalExpression","start":150,"end":194,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":55}},"test":{"type":"BinaryExpression","start":150,"end":157,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":18}},"left":{"type":"Identifier","start":150,"end":151,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":12}},"name":"x"},"operator":"===","right":{"type":"Literal","start":156,"end":157,"loc":{"start":{"line":6,"column":17},"end":{"line":6,"column":18}},"value":0,"raw":"0"}},"consequent":{"type":"Literal","start":160,"end":161,"loc":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"value":1,"raw":"1"},"alternate":{"type":"CallExpression","start":164,"end":194,"loc":{"start":{"line":6,"column":25},"end":{"line":6,"column":55}},"callee":{"type":"Identifier","start":164,"end":166,"loc":{"start":{"line":6,"column":25},"end":{"line":6,"column":27}},"name":"op"},"arguments":[{"type":"CallExpression","start":167,"end":179,"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":40}},"callee":{"type":"Identifier","start":167,"end":168,"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":29}},"name":"f"},"arguments":[{"type":"BinaryExpression","start":169,"end":174,"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":35}},"left":{"type":"Identifier","start":169,"end":170,"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":31}},"name":"x"},"operator":"-","right":{"type":"Literal","start":173,"end":174,"loc":{"start":{"line":6,"column":34},"end":{"line":6,"column":35}},"value":1,"raw":"1"}},{"type":"Identifier","start":176,"end":178,"loc":{"start":{"line":6,"column":37},"end":{"line":6,"column":39}},"name":"op"}]},{"type":"CallExpression","start":181,"end":193,"loc":{"start":{"line":6,"column":42},"end":{"line":6,"column":54}},"callee":{"type":"Identifier","start":181,"end":182,"loc":{"start":{"line":6,"column":42},"end":{"line":6,"column":43}},"name":"f"},"arguments":[{"type":"BinaryExpression","start":183,"end":188,"loc":{"start":{"line":6,"column":44},"end":{"line":6,"column":49}},"left":{"type":"Identifier","start":183,"end":184,"loc":{"start":{"line":6,"column":44},"end":{"line":6,"column":45}},"name":"x"},"operator":"-","right":{"type":"Literal","start":187,"end":188,"loc":{"start":{"line":6,"column":48},"end":{"line":6,"column":49}},"value":1,"raw":"1"}},{"type":"Identifier","start":190,"end":192,"loc":{"start":{"line":6,"column":51},"end":{"line":6,"column":53}},"name":"op"}]}]}}}]}},{"type":"ExpressionStatement","start":214,"end":233,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":19}},"expression":{"type":"CallExpression","start":214,"end":232,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":18}},"callee":{"type":"Identifier","start":214,"end":215,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":1}},"name":"f"},"arguments":[{"type":"Literal","start":216,"end":217,"loc":{"start":{"line":9,"column":2},"end":{"line":9,"column":3}},"value":2,"raw":"2"},{"type":"ArrowFunctionExpression","start":219,"end":231,"loc":{"start":{"line":9,"column":5},"end":{"line":9,"column":17}},"id":null,"expression":true,"generator":false,"params":[{"type":"Identifier","start":220,"end":221,"loc":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"name":"a"},{"type":"Identifier","start":222,"end":223,"loc":{"start":{"line":9,"column":8},"end":{"line":9,"column":9}},"name":"b"}],"body":{"type":"BinaryExpression","start":228,"end":231,"loc":{"start":{"line":9,"column":14},"end":{"line":9,"column":17}},"left":{"type":"Identifier","start":228,"end":229,"loc":{"start":{"line":9,"column":14},"end":{"line":9,"column":15}},"name":"a"},"operator":"+","right":{"type":"Identifier","start":230,"end":231,"loc":{"start":{"line":9,"column":16},"end":{"line":9,"column":17}},"name":"b"}}}]}},{"type":"ExpressionStatement","start":234,"end":245,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":11}},"expression":{"type":"CallExpression","start":234,"end":244,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":10}},"callee":{"type":"Identifier","start":234,"end":240,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":6}},"name":"square"},"arguments":[{"type":"Literal","start":241,"end":243,"loc":{"start":{"line":10,"column":7},"end":{"line":10,"column":9}},"value":10,"raw":"10"}]}},{"type":"ExpressionStatement","start":246,"end":258,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":12}},"expression":{"type":"CallExpression","start":246,"end":257,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":11}},"callee":{"type":"Identifier","start":246,"end":252,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":6}},"name":"square"},"arguments":[{"type":"Literal","start":253,"end":256,"loc":{"start":{"line":11,"column":7},"end":{"line":11,"column":10}},"value":"a","raw":"\"a\""}]}}],"sourceType":"module"}
"#;
/*const SOURCE_CODE: &'static str = r#"
{"type":"Identifier","start":0,"end":72,"name":"str"}
"#;*/
/*const SOURCE_CODE: &'static str = r#"
{"type":"FunctionDeclaration","start":0,"end":72,"id":{"type":"Identifier","start":9,"end":10,"name":"f"},"expression":false,"generator":false,"async":false,"params":[],"body":{"type":"BlockStatement","start":17,"end":72,"body":[]}}
"#;*/

const IMPORT: &'static str = r#"
{"type":"Program","start":0,"end":118,"loc":{"start":{"line":1,"column":0},"end":{"line":9,"column":24}},"body":[{"type":"FunctionDeclaration","start":0,"end":40,"loc":{"start":{"line":1,"column":0},"end":{"line":3,"column":1}},"id":{"type":"Identifier","start":9,"end":15,"loc":{"start":{"line":1,"column":9},"end":{"line":1,"column":15}},"name":"square"},"expression":false,"generator":false,"params":[{"type":"Identifier","start":16,"end":17,"loc":{"start":{"line":1,"column":16},"end":{"line":1,"column":17}},"name":"x"}],"body":{"type":"BlockStatement","start":19,"end":40,"loc":{"start":{"line":1,"column":19},"end":{"line":3,"column":1}},"body":[{"type":"ReturnStatement","start":26,"end":37,"loc":{"start":{"line":2,"column":4},"end":{"line":2,"column":15}},"argument":{"type":"BinaryExpression","start":33,"end":36,"loc":{"start":{"line":2,"column":11},"end":{"line":2,"column":14}},"left":{"type":"Identifier","start":33,"end":34,"loc":{"start":{"line":2,"column":11},"end":{"line":2,"column":12}},"name":"x"},"operator":"*","right":{"type":"Identifier","start":35,"end":36,"loc":{"start":{"line":2,"column":13},"end":{"line":2,"column":14}},"name":"x"}}}]}},{"type":"FunctionDeclaration","start":44,"end":90,"loc":{"start":{"line":5,"column":0},"end":{"line":7,"column":1}},"id":{"type":"Identifier","start":53,"end":57,"loc":{"start":{"line":5,"column":9},"end":{"line":5,"column":13}},"name":"cube"},"expression":false,"generator":false,"params":[{"type":"Identifier","start":58,"end":59,"loc":{"start":{"line":5,"column":14},"end":{"line":5,"column":15}},"name":"x"}],"body":{"type":"BlockStatement","start":61,"end":90,"loc":{"start":{"line":5,"column":17},"end":{"line":7,"column":1}},"body":[{"type":"ReturnStatement","start":68,"end":87,"loc":{"start":{"line":6,"column":4},"end":{"line":6,"column":23}},"argument":{"type":"BinaryExpression","start":75,"end":86,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":22}},"left":{"type":"CallExpression","start":75,"end":84,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":20}},"callee":{"type":"Identifier","start":75,"end":81,"loc":{"start":{"line":6,"column":11},"end":{"line":6,"column":17}},"name":"square"},"arguments":[{"type":"Identifier","start":82,"end":83,"loc":{"start":{"line":6,"column":18},"end":{"line":6,"column":19}},"name":"x"}]},"operator":"*","right":{"type":"Identifier","start":85,"end":86,"loc":{"start":{"line":6,"column":21},"end":{"line":6,"column":22}},"name":"x"}}}]}},{"type":"ExportNamedDeclaration","start":94,"end":118,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}},"declaration":null,"specifiers":[{"type":"ExportSpecifier","start":103,"end":109,"loc":{"start":{"line":9,"column":9},"end":{"line":9,"column":15}},"local":{"type":"Identifier","start":103,"end":109,"loc":{"start":{"line":9,"column":9},"end":{"line":9,"column":15}},"name":"square"},"exported":{"type":"Identifier","start":103,"end":109,"loc":{"start":{"line":9,"column":9},"end":{"line":9,"column":15}},"name":"square"}},{"type":"ExportSpecifier","start":111,"end":115,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":21}},"local":{"type":"Identifier","start":111,"end":115,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":21}},"name":"cube"},"exported":{"type":"Identifier","start":111,"end":115,"loc":{"start":{"line":9,"column":17},"end":{"line":9,"column":21}},"name":"cube"}}],"source":null}],"sourceType":"module"}
"#;

#[derive(Copy, Clone)]
pub struct MainLogger {}
impl log::Logger for MainLogger {
    fn log(&self, message: String) {
        print!("logger: {}", message);
    }
}

async fn fetch_dep_proxy(name: String) -> Option<String> {
    Some(IMPORT.to_owned())
}

fn main() {
    {
        use std::io;
        use std::io::prelude::*;
        let _ = io::stdin().read(&mut [0u8]).unwrap();
    }

    let _: () = futures::executor::block_on((|| async {
        use wasmgen::WasmSerialize;

        //let ir_imports = frontend_estree::parse_imports(import_spec, MainLogger::new(context))?;
        let ir_program =
            frontend_estree::run_frontend(SOURCE_CODE.to_owned(), fetch_dep_proxy, MainLogger {})
                .await?;
        let ir_program_opt = ir::opt::optimize_mandatory(ir_program);
        println!("{:#?}", &ir_program_opt);
        {
            use std::io::prelude::*;
            let mut file = std::fs::File::create("out.ir").unwrap();
            file.write_all(format!("{:#?}", &ir_program_opt).as_bytes())
                .unwrap();
        }
        let wasm_module =
            backend_wasm::run_backend(&ir_program_opt, backend_wasm::Options::default());
        let mut receiver = std::vec::Vec::<u8>::new();
        wasm_module.wasm_serialize(&mut receiver);
        {
            use std::io::prelude::*;
            let mut file = std::fs::File::create("out.wasm").unwrap();
            file.write_all(&receiver).unwrap();
        }
        Ok(())
    })())
    .unwrap_or_else(|_: ()| panic!("Frontend errored out"));
}
